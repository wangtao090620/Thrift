/**
 * Autogenerated by Thrift Compiler (0.9.1)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.giphy.protocol;

import java.util.Hashtable;
import java.util.Iterator;
import java.util.Vector;
import java.util.Enumeration;

import org.json.*;

import org.apache.thrift.*;
import org.apache.thrift.meta_data.*;
import org.apache.thrift.transport.*;
import org.apache.thrift.protocol.*;

public class SearchResponse implements TBase {
  private static final TStruct STRUCT_DESC = new TStruct("");

  private static final TField DATA_FIELD_DESC = new TField("data", TType.LIST, (short)1);
  private static final TField META_FIELD_DESC = new TField("meta", TType.STRUCT, (short)2);
  private static final TField PAGINATION_FIELD_DESC = new TField("pagination", TType.STRUCT, (short)3);

  private Vector data;
  private Meta meta;
  private Pagination pagination;

  // isset id assignments

  public SearchResponse() {
  }

  public SearchResponse(
    Vector data,
    Meta meta,
    Pagination pagination)
  {
    this();
    this.data = data;
    this.meta = meta;
    this.pagination = pagination;
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public SearchResponse(SearchResponse other) {
    if (other.isSetData()) {
      Vector __this__data = new Vector();
      for (Enumeration other_enum = other.data.elements(); other_enum.hasMoreElements(); ) {
        Data other_element = (Data)other_enum.nextElement();
        __this__data.addElement(new Data(other_element));
      }
      this.data = __this__data;
    }
    if (other.isSetMeta()) {
      this.meta = new Meta(other.meta);
    }
    if (other.isSetPagination()) {
      this.pagination = new Pagination(other.pagination);
    }
  }

  public SearchResponse deepCopy() {
    return new SearchResponse(this);
  }

  public void clear() {
    this.data = null;
    this.meta = null;
    this.pagination = null;
  }

  public int getDataSize() {
    return (this.data == null) ? 0 : this.data.size();
  }

  public Enumeration getDataEnumeration() {
    return (this.data == null) ? null : this.data.elements();
  }

  public void addToData(Data elem) {
    if (this.data == null) {
      this.data = new Vector();
    }
    this.data.addElement(elem);
  }

  public Vector getData() {
    return this.data;
  }

  public void setData(Vector data) {
    this.data = data;
  }

  public void unsetData() {
    this.data = null;
  }

  /** Returns true if field data is set (has been assigned a value) and false otherwise */
  public boolean isSetData() {
    return this.data != null;
  }

  public void setDataIsSet(boolean value) {
    if (!value) {
      this.data = null;
    }
  }

  public Meta getMeta() {
    return this.meta;
  }

  public void setMeta(Meta meta) {
    this.meta = meta;
  }

  public void unsetMeta() {
    this.meta = null;
  }

  /** Returns true if field meta is set (has been assigned a value) and false otherwise */
  public boolean isSetMeta() {
    return this.meta != null;
  }

  public void setMetaIsSet(boolean value) {
    if (!value) {
      this.meta = null;
    }
  }

  public Pagination getPagination() {
    return this.pagination;
  }

  public void setPagination(Pagination pagination) {
    this.pagination = pagination;
  }

  public void unsetPagination() {
    this.pagination = null;
  }

  /** Returns true if field pagination is set (has been assigned a value) and false otherwise */
  public boolean isSetPagination() {
    return this.pagination != null;
  }

  public void setPaginationIsSet(boolean value) {
    if (!value) {
      this.pagination = null;
    }
  }

  public boolean equals(Object that) {
    if (that == null)
      return false;
    if (that instanceof SearchResponse)
      return this.equals((SearchResponse)that);
    return false;
  }

  public boolean equals(SearchResponse that) {
    if (that == null)
      return false;

    boolean this_present_data = true && this.isSetData();
    boolean that_present_data = true && that.isSetData();
    if (this_present_data || that_present_data) {
      if (!(this_present_data && that_present_data))
        return false;
      if (!this.data.equals(that.data))
        return false;
    }

    boolean this_present_meta = true && this.isSetMeta();
    boolean that_present_meta = true && that.isSetMeta();
    if (this_present_meta || that_present_meta) {
      if (!(this_present_meta && that_present_meta))
        return false;
      if (!this.meta.equals(that.meta))
        return false;
    }

    boolean this_present_pagination = true && this.isSetPagination();
    boolean that_present_pagination = true && that.isSetPagination();
    if (this_present_pagination || that_present_pagination) {
      if (!(this_present_pagination && that_present_pagination))
        return false;
      if (!this.pagination.equals(that.pagination))
        return false;
    }

    return true;
  }

  public int hashCode() {
    return 0;
  }

  public int compareTo(Object otherObject) {
    if (!getClass().equals(otherObject.getClass())) {
      return getClass().getName().compareTo(otherObject.getClass().getName());
    }

    SearchResponse other = (SearchResponse)otherObject;    int lastComparison = 0;

    lastComparison = TBaseHelper.compareTo(isSetData(), other.isSetData());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetData()) {
      lastComparison = TBaseHelper.compareTo(this.data, other.data);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = TBaseHelper.compareTo(isSetMeta(), other.isSetMeta());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetMeta()) {
      lastComparison = this.meta.compareTo(other.meta);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = TBaseHelper.compareTo(isSetPagination(), other.isSetPagination());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPagination()) {
      lastComparison = this.pagination.compareTo(other.pagination);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public void read(TProtocol iprot) throws TException {
    TField field;
    iprot.readStructBegin();
    while (true)
    {
      field = iprot.readFieldBegin();
      if (field.type == TType.STOP) { 
        break;
      }
      switch (field.id) {
        case 1: // DATA
          if (field.type == TType.LIST) {
            {
              TList _list0 = iprot.readListBegin();
              this.data = new Vector(_list0.size);
              for (int _i1 = 0; _i1 < _list0.size; ++_i1)
              {
                Data _elem2;
                _elem2 = new Data();
                _elem2.read(iprot);
                this.data.addElement(_elem2);
              }
              iprot.readListEnd();
            }
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 2: // META
          if (field.type == TType.STRUCT) {
            this.meta = new Meta();
            this.meta.read(iprot);
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 3: // PAGINATION
          if (field.type == TType.STRUCT) {
            this.pagination = new Pagination();
            this.pagination.read(iprot);
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        default:
          TProtocolUtil.skip(iprot, field.type);
      }
      iprot.readFieldEnd();
    }
    iprot.readStructEnd();
    validate();
  }

  public void write(TProtocol oprot) throws TException {
    validate();

    oprot.writeStructBegin(STRUCT_DESC);
    if (this.data != null) {
      oprot.writeFieldBegin(DATA_FIELD_DESC);
      {
        oprot.writeListBegin(new TList(TType.STRUCT, this.data.size()));
        for (Enumeration _iter3_enum = this.data.elements(); _iter3_enum.hasMoreElements(); )         {
          Data _iter3 = (Data)_iter3_enum.nextElement();
          _iter3.write(oprot);
        }
        oprot.writeListEnd();
      }
      oprot.writeFieldEnd();
    }
    if (this.meta != null) {
      oprot.writeFieldBegin(META_FIELD_DESC);
      this.meta.write(oprot);
      oprot.writeFieldEnd();
    }
    if (this.pagination != null) {
      oprot.writeFieldBegin(PAGINATION_FIELD_DESC);
      this.pagination.write(oprot);
      oprot.writeFieldEnd();
    }
    oprot.writeFieldStop();
    oprot.writeStructEnd();
  }

  public void validate() throws TException {
    // check for required fields
  }

  public void read(JSONObject obj) throws TException {
    validate();

    try {
      if (obj.has(DATA_FIELD_DESC.name())) {
        {
          JSONArray _list4 = obj.optJSONArray(DATA_FIELD_DESC.name());
          this.data = new Vector(_list4.length());
          for (int _i6=0; _i6<_list4.length(); _i6++)
          {
            Data _elem9;
            _elem9 = new Data();
            _elem9.read(_list4.optJSONObject(_i6));
            this.data.addElement(_elem9);
          }
        }
      }
      if (obj.has(META_FIELD_DESC.name())) {
        this.meta = new Meta();
        this.meta.read(obj.optJSONObject(META_FIELD_DESC.name()));
      }
      if (obj.has(PAGINATION_FIELD_DESC.name())) {
        this.pagination = new Pagination();
        this.pagination.read(obj.optJSONObject(PAGINATION_FIELD_DESC.name()));
      }
    } catch (Exception e) {
        throw new TException(e);
    }
  }

  public void write(JSONObject obj) throws TException {
    validate();

    try {
      if (this.data != null) {
        JSONArray v_data = new JSONArray();
        for (Enumeration _iter10_enum = this.data.elements(); _iter10_enum.hasMoreElements(); )         {
          Data _iter10 = (Data)_iter10_enum.nextElement();
          Data  _iter10_value = ((Data)_iter10);
          JSONObject _iter10_value_json = new JSONObject();
          _iter10_value.write(_iter10_value_json);
          v_data.put(_iter10_value_json);
        }
        obj.put(DATA_FIELD_DESC.name(), v_data);
      }
      if (this.meta != null) {
        JSONObject v_meta = new JSONObject();
        this.meta.write(v_meta);
        obj.put(META_FIELD_DESC.name(), v_meta);
      }
      if (this.pagination != null) {
        JSONObject v_pagination = new JSONObject();
        this.pagination.write(v_pagination);
        obj.put(PAGINATION_FIELD_DESC.name(), v_pagination);
      }
    } catch (Exception e) {
        throw new TException(e);
    }
  }

}

